(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      8050,        206]
NotebookOptionsPosition[      7742,        191]
NotebookOutlinePosition[      8101,        207]
CellTagsIndexPosition[      8058,        204]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["S", "i"], "(", 
    StyleBox["cell",
     FontSlant->"Italic"], ")"}], "=", 
   RowBox[{"{", GridBox[{
      {
       RowBox[{
        RowBox[{"0", "\[RightArrow]", 
         RowBox[{"1", "\[AlignmentMarker]   ", "if", 
          StyleBox[
           StyleBox[
            RowBox[{
             StyleBox[" ",
              FontWeight->"Plain"], " "}]],
           FontSlant->"Italic"], 
          RowBox[{
           SubscriptBox["N", 
            RowBox[{"i", "-", "1"}]], "(", 
           StyleBox["cell",
            FontSlant->"Italic"], ")"}]}]}], "=", "3"}]},
      {
       RowBox[{"1", "\[RightArrow]", 
        RowBox[{
         RowBox[{"0", "\[AlignmentMarker]  ", "if", "  ", 
          RowBox[{
           SubscriptBox["N", 
            RowBox[{"i", "-", "1"}]], "(", 
           StyleBox["cell",
            FontSlant->"Italic"], ")"}]}], "<", "2"}]}]},
      {
       RowBox[{
        RowBox[{"1", "\[RightArrow]", 
         RowBox[{"1", "\[AlignmentMarker]  ", "if", "  ", 
          RowBox[{
           SubscriptBox["N", 
            RowBox[{"i", "-", "1"}]], "(", 
           StyleBox["cell",
            FontSlant->"Italic"], ")"}]}]}], "\[Element]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}]},
      {
       RowBox[{"1", "\[RightArrow]", 
        RowBox[{
         RowBox[{"0", "\[AlignmentMarker]  ", "if", "  ", 
          RowBox[{
           SubscriptBox["N", 
            RowBox[{"i", "-", "1"}]], "(", 
           StyleBox["cell",
            FontSlant->"Italic"], ")"}]}], ">", "3"}]}]}
     }], "\[AlignmentMarker]"}]}], TraditionalForm]],
 CellChangeTimes->{{3.6698507334897137`*^9, 3.669850810823276*^9}},
 SpanMaxSize->Infinity,
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{"\[AlignmentMarker]"}}, "Rows" -> {{"\[AlignmentMarker]"}}}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`choice$$ = 
    False, $CellContext`initialconditions$$ = 199, $CellContext`sr$$ = 
    11112, $CellContext`Steps$$ = 0, $CellContext`x$$ = {{5, 10}, {6, 10}, {6,
     12}, {8, 11}, {9, 10}, {10, 10}, {11, 10}}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`choice$$], True, ""}, {
      True -> "random", False -> "manual"}}, {{
       Hold[$CellContext`Steps$$], 0, "steps"}, 0, 200, 1}, {{
       Hold[$CellContext`initialconditions$$], 30, 
       "number of initial conditions"}, 30, 200, 1}, {{
       Hold[$CellContext`sr$$], 123, "random seed"}, 1, 123456, 1}, {
      Hold[
       PaneSelector[{True -> Column[{
            Manipulate`Place[1], 
            Manipulate`Place[2], 
            Button[
            "generate random conditions", 
             SeedRandom[$CellContext`sr$$]; $CellContext`x$$ = 
              RandomInteger[{1, 
                18}, {$CellContext`initialconditions$$, 2}]]}]}, 
        Dynamic[$CellContext`choice$$]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`x$$], {{8, 9}}}}}, Typeset`size$$ = {
    609., {147.134033203125, 152.865966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`choice$5106$$ = False, $CellContext`Steps$5107$$ = 
    0, $CellContext`initialconditions$5108$$ = 
    169.6471056175232, $CellContext`sr$5109$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`choice$$ = 
        True, $CellContext`initialconditions$$ = 30, $CellContext`sr$$ = 
        123, $CellContext`Steps$$ = 0, $CellContext`x$$ = {{8, 9}}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`choice$$, $CellContext`choice$5106$$, False], 
        Hold[$CellContext`Steps$$, $CellContext`Steps$5107$$, 0], 
        Hold[$CellContext`initialconditions$$, \
$CellContext`initialconditions$5108$$, 0], 
        Hold[$CellContext`sr$$, $CellContext`sr$5109$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          If[$CellContext`choice$$, 
           Rotate[
            MatrixPlot[
             SparseArray[$CellContext`x$$ -> 1], FrameTicks -> None, 
             ImageSize -> {300, 300}], 90 Degree], 
           ClickPane[
            Dynamic[
             Graphics[{
               Map[$CellContext`symbol, $CellContext`x$$]}, 
              ImageSize -> {300, 300}, GridLines -> {
                Range[20], 
                Range[20]}, PlotRange -> {{1, 19}, {1, 18.5}}]], If[
             MemberQ[$CellContext`x$$, 
              Round[# - 0.5]], {$CellContext`x$$ = Delete[$CellContext`x$$, 
                Position[$CellContext`x$$, 
                 Round[# - 0.5]]]}, $CellContext`x$$ = 
             Append[$CellContext`x$$, 
               Round[# - 0.5]]]& ]], 
          Rotate[
           ArrayPlot[
            Mean[
             CellularAutomaton[$CellContext`GameOfLife, {
               SparseArray[$CellContext`x$$ -> 1], 0}, $CellContext`Steps$$]],
             ImageSize -> {300, 300}], 90 Degree]}}], 
      "Specifications" :> {{{$CellContext`choice$$, True, ""}, {
         True -> "random", False -> "manual"}}, {{$CellContext`Steps$$, 0, 
          "steps"}, 0, 200, 1, Appearance -> 
         "Labeled"}, {{$CellContext`initialconditions$$, 30, 
          "number of initial conditions"}, 30, 200, 1, Appearance -> 
         "Labeled", ControlPlacement -> 
         1}, {{$CellContext`sr$$, 123, "random seed"}, 1, 123456, 1, 
         Appearance -> "Labeled", ControlPlacement -> 2}, 
        PaneSelector[{True -> Column[{
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Button[
             "generate random conditions", 
              SeedRandom[$CellContext`sr$$]; $CellContext`x$$ = 
               RandomInteger[{1, 
                 18}, {$CellContext`initialconditions$$, 2}]]}]}, 
         Dynamic[$CellContext`choice$$]], {{$CellContext`x$$, {{8, 9}}}, 
         ControlType -> None}}, "Options" :> {AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{654., {263., 268.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`GameOfLife = {
        224, {2, {{2, 2, 2}, {2, 1, 2}, {2, 2, 2}}}, {1, 
         1}}; $CellContext`symbol[
         Pattern[$CellContext`u, 
          Blank[]]] := Translate[{
          Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}, $CellContext`u + 0.5]); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.669848808252109*^9}]
},
WindowSize->{808, 1028},
WindowMargins->{{Automatic, 270}, {0, Automatic}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1865, 57, 73, InheritFromParent],
Cell[2426, 79, 5312, 110, 548, "Output"]
}
]
*)

(* End of internal cache information *)

